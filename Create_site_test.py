# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SPIxWpw0-QsYbgQ2jSl4x8LXMeSKOn8y
"""

import streamlit as st

# Configuration de la page
st.set_page_config(page_title="ELECTRO SOLUT ‚Äì Vente d'ordinateurs", layout="wide")

# --- Banni√®re avec logo ---
st.markdown("""
    <div style="background-color:#0A5275;padding:20px;border-radius:10px;">
        <h1 style="color:white;text-align:center;">üíª ELECTRO SOLUT</h1>
        <h3 style="color:white;text-align:center;">Votre partenaire en solutions informatiques</h3>
    </div>
""", unsafe_allow_html=True)

# --- Pr√©sentation de l'entreprise ---
st.header("üì¢ √Ä propos de nous")
st.write("""
**ELECTRO SOLUT** est une entreprise sp√©cialis√©e dans la vente d'ordinateurs portables, de bureau et d‚Äôaccessoires tech haut de gamme.
Nous proposons des produits fiables, performants et adapt√©s √† tous les besoins (√©tudiants, professionnels, gamers, etc.).
""")


# --- Style pour uniformiser les images ---
st.markdown("""
    <style>
    img {
        height: 200px !important;
        object-fit: cover;
        width: 100% !important;
        border-radius: 10px;
    }
    </style>
""", unsafe_allow_html=True)

# --- Catalogue de produits ---
import streamlit as st

# Initialisation du panier
if 'panier' not in st.session_state:
    st.session_state.panier = []

# CSS pour les cartes produits
st.markdown("""
    <style>
    .product-card {
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 20px;
        text-align: center;
        background: white;
        position: relative;
        box-shadow: 0 4px 8px rgba(0,0,0,0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        height: 100%;
    }
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0,0,0,0.12);
    }
    .badge-new {
        position: absolute;
        top: 12px;
        left: 12px;
        background: #00acc1;
        color: white;
        padding: 4px 10px;
        font-size: 12px;
        border-radius: 4px;
        font-weight: 600;
    }
    .badge-discount {
        position: absolute;
        top: 12px;
        right: 12px;
        background: #ff6b6b;
        color: white;
        padding: 4px 10px;
        font-size: 12px;
        border-radius: 4px;
        font-weight: 600;
    }
    .product-image {
        width: 80%;
        height: 150px;
        object-fit: contain;
        margin: 10px auto;
        transition: transform 0.3s ease;
    }
    .product-title {
        font-size: 16px;
        font-weight: 600;
        margin: 15px 0 10px;
        color: #333;
    }
    .price-container {
        margin: 10px 0;
    }
    .price {
        font-size: 18px;
        font-weight: 700;
        color: #2e7d32;
    }
    .product-specs {
        font-size: 14px;
        color: #555;
        margin: 10px 0;
        line-height: 1.4;
    }
    .add-to-cart-btn {
        background: #4CAF50;
        color: white;
        border: none;
        padding: 8px 20px;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
        width: 100%;
        transition: background 0.3s;
    }
    .add-to-cart-btn:hover {
        background: #3d8b40;
    }
    </style>
""", unsafe_allow_html=True)

def ajouter_au_panier(produit, prix):
    for item in st.session_state.panier:
        if item['nom'] == produit:
            item['quantite'] += 1
            st.success(f"Quantit√© mise √† jour pour {produit}!")
            return
    
    st.session_state.panier.append({
        'nom': produit,
        'prix': prix,
        'quantite': 1
    })
    st.success(f"{produit} ajout√© au panier!")

# Affichage du catalogue principal
st.header("üéØ Nos Produits Informatiques")

cols = st.columns(3)

# Produit 1 - ProBook
with cols[0]:
    produit = "ProBook"
    prix = 899
    st.markdown(f"""
    <div class="product-card">
        <div class="badge-new">NOUVEAU</div>
        <img src="https://images.unsplash.com/photo-1517336714731-489689fd1ca8" class="product-image" alt="{produit}"/>
        <p class="product-title">Ordinateur portable {produit}</p>
        <div class="price-container">
            <span class="price">{prix} ‚Ç¨</span>
        </div>
        <p class="product-specs">üíª i7-1165G7 | 16GB RAM | 512GB SSD | Windows 11 Pro</p>
    </div>
    """, unsafe_allow_html=True)
    if st.button("Ajouter au panier", key=produit, use_container_width=True):
        ajouter_au_panier(produit, prix)

# Produit 2 - X-Treme
with cols[1]:
    produit = "X-Treme"
    prix = 1299
    st.markdown(f"""
    <div class="product-card">
        <div class="badge-discount">PROMO</div>
        <img src="https://i5.walmartimages.ca/images/Enlarge/729/870/6000199729870.jpg" class="product-image" alt="{produit}"/>
        <p class="product-title">Ordinateur Gamer {produit}</p>
        <div class="price-container">
            <span class="price">{prix} ‚Ç¨</span>
        </div>
        <p class="product-specs">üéÆ RTX 3060 | i7-12700H | 32GB RAM | 1TB SSD</p>
    </div>
    """, unsafe_allow_html=True)
    if st.button("Ajouter au panier", key=produit, use_container_width=True):
        ajouter_au_panier(produit, prix)

# Produit 3 - Mini PC
with cols[2]:
    produit = "Mini PC"
    prix = 499
    st.markdown(f"""
    <div class="product-card">
        <div class="badge-new">NOUVEAU</div>
        <img src="https://www.electronicscritique.com/wp-content/uploads/2020/11/ACEPC-Mini-PC-Windows-10-Pro-Celeron-J3455-1024x827.jpg" class="product-image" alt="{produit}"/>
        <p class="product-title">{produit} Compact</p>
        <div class="price-container">
            <span class="price">{prix} ‚Ç¨</span>
        </div>
        <p class="product-specs">üñ•Ô∏è Celeron J3455 | 8GB RAM | 128GB SSD | Windows 10 Pro</p>
    </div>
    """, unsafe_allow_html=True)
    if st.button("Ajouter au panier", key=produit, use_container_width=True):
        ajouter_au_panier(produit, prix)

# Affichage du panier dans la sidebar
st.sidebar.header("üõí Votre Panier")

if not st.session_state.panier:
    st.sidebar.write("Votre panier est vide")
else:
    total = 0
    for i, item in enumerate(st.session_state.panier):
        col1, col2, col3 = st.sidebar.columns([5, 3, 1])
        with col1:
            st.write(f"**{item['nom']}**")
        with col2:
            st.write(f"{item['quantite']} √ó {item['prix']}‚Ç¨")
        with col3:
            if st.button("‚ùå", key=f"del{i}"):
                if item['quantite'] > 1:
                    item['quantite'] -= 1
                else:
                    st.session_state.panier.pop(i)
                st.rerun()
        
        total += item['prix'] * item['quantite']
    
    st.sidebar.markdown("---")
    st.sidebar.markdown(f"**Total : {total} ‚Ç¨**")
    
    if st.sidebar.button("Vider le panier", use_container_width=True):
        st.session_state.panier = []
        st.rerun()
    
    if st.sidebar.button("Passer commande", type="primary", use_container_width=True):
        st.sidebar.success("Commande pass√©e avec succ√®s!")
        st.session_state.panier = []
        st.rerun()


#### PAIEMENT 
from datetime import datetime
import pandas as pd

# --------------------------
# INITIALISATION
# --------------------------
def init_session():
    if 'panier' not in st.session_state:
        st.session_state.panier = []
    if 'commandes' not in st.session_state:
        st.session_state.commandes = []
    if 'etape_commande' not in st.session_state:
        st.session_state.etape_commande = 'panier'



# --------------------------
# PROCESSUS COMMANDE
    
    if st.button("Passer la commande", type="primary"):
        st.session_state.etape_commande = 'livraison'
        st.rerun()

def afficher_etape_livraison():
    st.header("üì¶ Informations de livraison")
    
    with st.form("form_livraison"):
        col1, col2 = st.columns(2)
        with col1:
            prenom = st.text_input("Pr√©nom", key="prenom")
            email = st.text_input("Email", key="email")
        with col2:
            nom = st.text_input("Nom", key="nom")
            telephone = st.text_input("T√©l√©phone", key="telephone")
        
        adresse = st.text_input("Adresse", key="adresse")
        
        col3, col4, col5 = st.columns(3)
        with col3:
            code_postal = st.text_input("Code postal", key="code_postal")
        with col4:
            ville = st.text_input("Ville", key="ville")
        with col5:
            pays = st.selectbox("Pays", ["France", "Belgique", "Suisse"], key="pays")
        
        livraison = st.radio(
            "Mode de livraison",
            ["Standard (3-5 jours) - Gratuit", "Express (24h) - 9.99‚Ç¨"],
            key="livraison"
        )
        
        if st.form_submit_button("Valider les informations"):
            st.session_state.infos_livraison = {
                "client": f"{prenom} {nom}",
                "contact": {"email": email, "telephone": telephone},
                "adresse": f"{adresse}, {code_postal} {ville}, {pays}",
                "livraison": livraison
            }
            st.session_state.etape_commande = 'paiement'
            st.rerun()

def afficher_etape_paiement():
    st.header("üí≥ Paiement")
    
    with st.form("form_paiement"):
        st.write("### R√©capitulatif de commande")
        
        col1, col2 = st.columns(2)
        with col1:
            st.write("**Produits**")
            for item in st.session_state.panier:
                st.write(f"- {item['nom']} ({item['quantite']} x {item['prix']}‚Ç¨)")
        
        with col2:
            st.write("**Livraison**")
            st.write(st.session_state.infos_livraison["adresse"])
            st.write(st.session_state.infos_livraison["livraison"])
        
        st.markdown(f"**Total : {calculer_total()} ‚Ç¨**")
        
        # Options de paiement
        mode_paiement = st.radio(
            "Moyen de paiement",
            ["Carte bancaire", "PayPal", "Virement bancaire"],
            key="paiement"
        )
        
        if mode_paiement == "Carte bancaire":
            col3, col4 = st.columns(2)
            with col3:
                numero_carte = st.text_input("Num√©ro de carte", key="num_carte")
            with col4:
                date_exp = st.text_input("Date d'expiration (MM/AA)", key="date_exp")
            
            col5, col6 = st.columns(2)
            with col5:
                cryptogramme = st.text_input("Cryptogramme", key="cryptogramme")
        
        if st.form_submit_button("Payer maintenant"):
            traiter_paiement()

def traiter_paiement():
    # Enregistrement de la commande
    commande = {
        "date": datetime.now().strftime("%d/%m/%Y %H:%M"),
        "produits": st.session_state.panier.copy(),
        "client": st.session_state.infos_livraison["client"],
        "contact": st.session_state.infos_livraison["contact"],
        "adresse": st.session_state.infos_livraison["adresse"],
        "livraison": st.session_state.infos_livraison["livraison"],
        "total": calculer_total(),
        "statut": "Pay√©e"
    }
    
    st.session_state.commandes.append(commande)
    st.session_state.panier = []
    st.session_state.etape_commande = 'confirmation'
    st.rerun()

def afficher_confirmation():
    st.success("‚úÖ Commande valid√©e et pay√©e avec succ√®s!")
    st.balloons()
    
    derniere_commande = st.session_state.commandes[-1]
    
    st.write("### R√©capitulatif de votre commande")
    st.write(f"**Num√©ro de commande :** #{len(st.session_state.commandes)}")
    st.write(f"**Date :** {derniere_commande['date']}")
    
    col1, col2 = st.columns(2)
    with col1:
        st.write("**Produits command√©s**")
        for item in derniere_commande["produits"]:
            st.write(f"- {item['nom']} ({item['quantite']} x {item['prix']}‚Ç¨)")
    
    with col2:
        st.write("**Livraison**")
        st.write(derniere_commande["adresse"])
        st.write(derniere_commande["livraison"])
    
    st.markdown(f"**Total : {derniere_commande['total']} ‚Ç¨**")
    
    st.write("Un email de confirmation vous a √©t√© envoy√© √†", derniere_commande["contact"]["email"])
    
    if st.button("Retour √† l'accueil"):
        st.session_state.etape_commande = 'panier'
        st.rerun()


# --------------------------
# APPLICATION PRINCIPALE
# --------------------------
def main():
    init_session()
    
    # Sidebar - Panier r√©sum√©
    with st.sidebar:
        st.header("Votre Panier")
        if st.session_state.panier:
            for item in st.session_state.panier:
                st.write(f"- {item['nom']} ({item['quantite']})")
            st.markdown(f"**Total : {total} ‚Ç¨**")
            
            if st.session_state.etape_commande == 'panier':
                if st.button("Passer commande", type="primary"):
                    st.session_state.etape_commande = 'livraison'
                    st.rerun()
        else:
            st.write("Votre panier est vide")
    
    # Contenu principal
    if st.session_state.etape_commande == 'panier':
        afficher_catalogue()
    elif st.session_state.etape_commande == 'livraison':
        afficher_etape_livraison()
    elif st.session_state.etape_commande == 'paiement':
        afficher_etape_paiement()
    elif st.session_state.etape_commande == 'confirmation':
        afficher_confirmation()

if __name__ == "__main__":
    main()
## --- Formulaire de contact ---

st.header("Contactez-nous")

with st.form(key='contact_form'):
    name = st.text_input("Nom")
    email = st.text_input("Email")
    message = st.text_area("Message")
    submit_button = st.form_submit_button(label='Terminer')
    if submit_button:
        st.markdown(f"""
            <form action="https://formsubmit.co/brousybah08@gmail.com" method="POST">
                <input type="hidden" name="_captcha" value="false">
                <input type="hidden" name="_next" value="https://ton-site.com/merci">
                <input type="text" name="Nom" value="{name}" hidden>
                <input type="email" name="Email" value="{email}" hidden>
                <textarea name="Message" hidden>{message}</textarea>
                <button type="submit">Envoyer</button>
            </form>
        """, unsafe_allow_html=True)
        st.write("‚úÖ Merci pour votre message ! Nous vous r√©pondrons dans les plus brefs d√©lais.")

st.markdown("""
### üìû Vous pouvez aussi nous appeler :
[**Appeler maintenant**](tel:+3374502452)
""", unsafe_allow_html=True)

# --- Pied de page ---
st.markdown("""
    <hr>
    <div style="text-align:center;">
        <p>¬© 2025 ELECTRO SOLUT ‚Äì Tous droits r√©serv√©s.</p>
        <p>üìß brousybah08@gmail.com | üìû +33 7 45 50 24 52</p>
    </div>
""", unsafe_allow_html=True)
